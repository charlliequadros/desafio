{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/ValidacoesCustomizadas/ProdutoPerecivelValidator.ts","webpack:///src/app/ValidacoesCustomizadas/UnidadeValidator.ts","webpack:///src/app/ValidacoesCustomizadas/dataFabricacaoValidator.ts","webpack:///src/app/ValidacoesCustomizadas/dataValidadeValidator.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cadastro/cadastro.component.ts","webpack:///src/app/cadastro/cadastro.component.html","webpack:///src/app/listagem/listagem.component.ts","webpack:///src/app/listagem/listagem.component.html","webpack:///src/app/produto.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","produtoPerecivelValidator","control","produtoPerecivel","get","value","dataValidadade","toString","length","UnidadeValidator","unidadeMedida","quantidade","unidadevalidator","dataFabricacaoValidator","DataValidade","Date","setDate","getDate","DataFabricacao","datafabricacao","dataValidadeValidator","dataValidade","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","elems","document","querySelectorAll","instances","init","selector","templateUrl","styleUrls","maskConfig","validation","AppModule","provide","useValue","declarations","providers","bootstrap","CadastroComponent","formBuilder","produtoService","route","option","prefix","thousands","decimal","precision","align","mask","idProduto","Number","snapshot","paramMap","console","log","obterProdutoPorId","x","formulario","setValue","group","nome","required","maxLength","preco","ProdutoPerecivel","validators","$","characterCounter","ready","resource","JSON","stringify","cadastrarProduto","updateProduto","reset","alterarMascaraUnidadeMedida","ListagemComponent","listaProduto","dtOptions","isDtInitialized","dtTrigger","obterListaProduto","pagingType","pageLength","language","search","paginate","next","first","last","previous","info","lengthMenu","zeroRecords","infoEmpty","infoFiltered","lista","apagarProdutoPorId","idproduto","mensagem","closeModal","elem","getElementById","instance","getInstance","open","destroy","close","window","location","reload","apagarProduto","ProdutoService","produto","listaProdutos","parse","localStorage","getItem","push","setItem","reject","splice","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport function produtoPerecivelValidator(control: AbstractControl) {\r\n\r\n    const produtoPerecivel = control.get('ProdutoPerecivel')?.value as boolean ;\r\n    const dataValidadade = control.get('DataValidade')?.value as Date ;\r\n    if( produtoPerecivel && dataValidadade.toString().length == 0 ) {\r\n        return { produtoPerecivel: true };\r\n    } else\r\n        return null;\r\n    \r\n}","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport function UnidadeValidator(control: AbstractControl) {\r\n\r\n    const unidadeMedida = control.get('unidadeMedida')?.value as string ;\r\n    const quantidade = control.get('quantidade')?.value as string ;\r\n    if( unidadeMedida?.length == 0 && quantidade?.length > 0) {\r\n        \r\n            return { unidadevalidator: true };\r\n    } else\r\n        return null;\r\n    \r\n}","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport function dataFabricacaoValidator(control: AbstractControl) {\r\n    \r\n    if(control.get('DataValidade')?.value && control.get('DataFabricacao')?.value ){\r\n        \r\n        let DataValidade = new Date (control.get('DataValidade')?.value as Date);\r\n        DataValidade.setDate(DataValidade.getDate()+1);\r\n\r\n        let DataFabricacao = new Date (control.get('DataFabricacao')?.value as Date);\r\n        DataFabricacao.setDate(DataFabricacao.getDate()+1);\r\n\r\n        if(DataFabricacao > DataValidade){\r\n\r\n\r\n            return { datafabricacao: true };\r\n        }\r\n\r\n    }\r\n    return null;\r\n\r\n    \r\n}","import { AbstractControl } from \"@angular/forms\";\r\n\r\nexport function dataValidadeValidator(control: AbstractControl) {\r\n    if(control.value===null)\r\n      return null;\r\n    let dataValidade = new Date(control.value as Date);\r\n    dataValidade.setDate(dataValidade.getDate() +1);\r\n    if(dataValidade < new Date()){\r\n        return { dataValidade: true };\r\n    }\r\n    else\r\n      return null;\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CadastroComponent } from './cadastro/cadastro.component';\nimport { ListagemComponent } from './listagem/listagem.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/cadastro', pathMatch: 'full' },\n  { path: 'cadastro', component: CadastroComponent },\n  { path: 'cadastro/:id', component: CadastroComponent },\n  { path: 'listagem', component: ListagemComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as M from \"materialize-css/dist/js/materialize\";\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Desafio Univali';\n\n  ngOnInit(): void {\n    var elems = document.querySelectorAll('.sidenav');\n    var instances = M.Sidenav.init(elems);\n  }\n}\n","\n\n\n <!-- <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\n      <li><a routerLink=\"/cadastro\">Cadastro</a></li>\n      <li><a routerLink=\"/listagem\">Listagem</a></li>\n    </ul>\n  <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a> -->\n          \n\n<ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\n    <li>\n      <div class=\"user-view\">\n        <div class=\"background\">\n          <img src=\"../../assets/img/logo.png\" class=\"logo\">\n        </div>\n \n      </div>\n    </li>\n    <li routerLinkActive=\"active\"><a  routerLink=\"/cadastro\"><i class=\"material-icons\">add</i>Cadastro</a></li>\n    <li routerLinkActive=\"active\"><a  routerLink=\"/listagem\"><i class=\"material-icons\">list</i>Listagem</a></li>\n    \n  </ul>\n  <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n\n<main>\n  <h1>{{title}}</h1>\n  <router-outlet></router-outlet>\n</main>\n  \n\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { LOCALE_ID, NgModule } from '@angular/core';\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CadastroComponent } from './cadastro/cadastro.component';\r\nimport { ListagemComponent } from './listagem/listagem.component';\r\nimport { CurrencyPipe } from '@angular/common';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\n\r\nimport {DataTablesModule} from 'angular-datatables';\r\n\r\n\r\n\r\nimport ptBr from '@angular/common/locales/pt';\r\nimport { registerLocaleData } from '@angular/common';\r\n\r\n\r\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\r\n \r\nconst maskConfig: Partial<IConfig> = {\r\n  validation: false,\r\n};\r\n\r\nregisterLocaleData(ptBr);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CadastroComponent,\r\n    ListagemComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n        NgxMaskModule.forRoot(maskConfig),\r\n        CurrencyMaskModule,\r\n        DataTablesModule\r\n\r\n  ],\r\n  providers: [CurrencyPipe,{ provide: LOCALE_ID, useValue: 'pt' },],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport {  CurrencyPipe} from '@angular/common';\n\n\nimport * as M from \"materialize-css/dist/js/materialize\";\nimport { dataValidadeValidator } from '../ValidacoesCustomizadas/dataValidadeValidator';\nimport { dataFabricacaoValidator } from '../ValidacoesCustomizadas/dataFabricacaoValidator';\nimport { produtoPerecivelValidator } from '../ValidacoesCustomizadas/ProdutoPerecivelValidator';\nimport { UnidadeValidator } from '../ValidacoesCustomizadas/UnidadeValidator';\nimport { ProdutoService } from '../produto.service';\nimport { ActivatedRoute } from '@angular/router';\n\ndeclare var $: any;\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n\n \n  option = { prefix: ' ',\n   thousands: '',\n    decimal: ',',\n\tprecision :'0',\n\talign:'left'\n  }\n \tmask= '0*,000';\n  formulario: FormGroup;\n  idProduto;\n \n  constructor(private formBuilder: FormBuilder,private produtoService : ProdutoService, private route: ActivatedRoute) { }\n\n  \tngOnInit(): void {\n\n\t\t this.idProduto = Number(this.route.snapshot.paramMap.get('id'));\n\n\t\tconsole.log(\">>>>>>>>>>>>>>>>>>>\",this.idProduto)\n\t\tif(this.idProduto != 0)\n\t\tthis.produtoService.obterProdutoPorId(this.idProduto-1).then(x=>{\n\t\t\tthis.formulario.setValue(x);\n\t\t}).catch(x=>{\n\n\t\t})\n\n\n\n\n\t\tthis.formulario = this.formBuilder.group({\n\t\t\tnome: ['',[Validators.required,Validators.maxLength(50)]],\n\t\t\tunidadeMedida: ['',[Validators.required]],\n\t\t\tquantidade: [],\n\t\t\tpreco: ['',[Validators.required]],\n\t\t\tProdutoPerecivel: ['',[]],\n\t\t\tDataValidade:['',[dataValidadeValidator]],\n\t\t\tDataFabricacao:['',[Validators.required]]\n\t\t\t},\n\t\t\t{\n\t\t\tvalidators:[produtoPerecivelValidator,dataFabricacaoValidator,UnidadeValidator]\n\t\t\t}\n    \t);\n\t\t$('input#input_text').characterCounter();\n\t\t\t$(document).ready(function() {\n\t\t\tM.updateTextFields();\n\t\t});\n\n      \tvar elems = document.querySelectorAll('select');\n    \tM.FormSelect.init(elems);\n\n\n\t\t\n\n\n\n  }\n\n \talterarMascaraUnidadeMedida(){\n\t\tlet unidadeMedida = this.formulario.get('unidadeMedida')?.value as string\n\t\tif(unidadeMedida == \"Litro\" || unidadeMedida == \"Quilograma\")\n\t\t{\n\t\t\tthis.mask= '0*,000';\n\t\t}else{\n\t\t\tthis.mask = '0*';\n\t\t}\n\t}\n\n\tcadastrarProduto(){\n\t\tlet resource = JSON.stringify(this.formulario.value);\n\t\tif(this.idProduto == 0)\n\t\t\tthis.produtoService.cadastrarProduto(resource);\n\t\telse\n\t\t\tthis.produtoService.updateProduto(resource,this.idProduto-1);\n\n\t\tthis.formulario.reset();\n\t\t\n\t}\n\n}\n","\n\n<form  [formGroup]=\"formulario\" (submit)=\"cadastrarProduto()\">\n\n<div class=\"row\">\n    <div class=\"input-field col s12\" >\n        <input id=\"input_text\" type=\"text\" data-length=\"50\" formControlName=\"nome\">\n        <label for=\"input_text\" class=\"active\">Nome Produto *</label>\n        <span *ngIf=\"formulario.controls.nome?.errors?.required  && formulario.get('nome')?.touched\" class=\"helper-text \" >Nome obrigatório</span>\n        <span *ngIf=\"formulario.controls.nome?.errors?.maxlength  && formulario.get('nome')?.touched\" class=\"helper-text \" >no maximo 50 caracter</span>\n\n\n    </div>\n</div>\n\n   <div class=\"row\">\n    <div class=\"input-field col s12\">\n        <select  formControlName=\"unidadeMedida\" (change)=\"alterarMascaraUnidadeMedida()\" >\n            <option  value=\"\" disabled selected>Escolha uma opção</option>\n            <option  value=\"lt\">Litro</option>\n            <option  value=\"kg\">Quilograma</option>\n            <option  value=\"un\">Unidade</option>\n        </select>\n        <label>Unidade *</label>\n    </div>\n\n\n    <div class=\"input-field col s12\" >\n        <input id=\"quantidadeId\" type=\"text\"   [mask]=\"mask\" formControlName=\"quantidade\">\n        <label for=\"quantidadeId\">Quantidade *</label>\n        <span *ngIf=\"formulario.errors?.unidadevalidator\" class=\"helper-text \" >Escolha a unidade de medida antes</span>\n        {{formulario.controls.unidadeMedida.value}}\n    </div>\n\n    <div class=\"input-field col s12\" >\n     <div class=\"checkbox checkbox-circle \">\n        <label>\n            <input type=\"checkbox\" class=\"filled-in\" formControlName=\"ProdutoPerecivel\"/>\n            <span>Produto perecivel?</span>\n        </label>\n    </div>\n    </div>\n   </div>\n   <div class=\"row\">\n    <div class=\"input-field col s12\" *ngIf=\"formulario.controls.ProdutoPerecivel.value\">\n        <input id=\"DataValidadeId\" type=\"date\"  formControlName=\"DataValidade\">\n        <label for=\"DataValidadeId\">Data validade *</label>\n        <span *ngIf=\"formulario.errors?.produtoPerecivel\" class=\"helper-text \" >Campo data validade é obrigatório</span>\n        <span *ngIf=\"formulario.controls.DataValidade?.errors?.dataValidade  && formulario.get('DataValidade')?.touched\" class=\"helper-text \" >O produto se encontra vencido</span>\n    </div>\n  \n\n    <div class=\"input-field col s12\" >\n        <input id=\"DataFabricacaoId\" type=\"date\"  formControlName=\"DataFabricacao\">\n        <label for=\"DataFabricacaoId\">Data fabricação *</label>\n        <span *ngIf=\"formulario.errors?.datafabricacao\" class=\"helper-text \" >Data nao pode ser mais que a data de vencimento</span>\n\n\n\n    </div>\n\n   \n    <div class=\"input-field col s12\" >\n        <input id=\"precoId\" type=\"text\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" formControlName=\"preco\">\n        <label for=\"precoId\">Preço</label>\n    </div>\n   </div>\n   <div class=\"row\">\n\n    <div class=\"input-field col s12\">\n        <div class=\"btn-rigth\">\n            <button [disabled]=\"!formulario.valid\" type=\"submit\" class=\"btn btn-success btn-margin-rigth\">\n                Salvar\n            </button>\n            <button routerLink=\"/listagem\" class=\"btn btn-success btn-margin-rigth\">Cancelar</button>\n        </div>\n    </div>\n\n</div>\n\n    \n    \n\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProdutoService } from '../produto.service';\n\ndeclare var $: any;\nimport * as M from \"materialize-css/dist/js/materialize\";\nimport { DataTableDirective } from 'angular-datatables';\nimport { Subject } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-listagem',\n  templateUrl: './listagem.component.html',\n  styleUrls: ['./listagem.component.css']\n})\nexport class ListagemComponent implements OnInit {\n\n  public listaProduto=[];\n  constructor(private produtoService : ProdutoService,private route: Router) { }\n  \n  idproduto\n\n  dtOptions: DataTables.Settings = {};\ndtElement: DataTableDirective;\n\nisDtInitialized:boolean = false\n    dtTrigger: Subject<any> = new Subject();\n\n  ngOnInit(): void {\n\n    \n\n\n    this.obterListaProduto();\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      \n    \n      language:{search:\"pesquisar\",\n      paginate: {next:\"Proximo\",first:\"Primeiro\",last:\"Ultimo\",previous:\"Anterior\"} ,\n      info:\"Monstrando _START_ à _END_ de _TOTAL_ produtos\",\n      lengthMenu:\"\",\n      zeroRecords:\"Tabela vazia\",\n      infoEmpty: \"\",\n      infoFiltered:   \"\",\n    }\n    };\n    \n    \n\n\n    var elems = document.querySelectorAll('.modal');\n    M.Modal.init(elems);\n\n\n  }\n\n  obterListaProduto(){\n    this.produtoService.obterListaProduto().then((lista:Array<any>)=>{\n        this.listaProduto = lista;\n        console.log(this.listaProduto)\n        \n    })\n  }\n\n  apagarProduto(){\n    this.produtoService.apagarProdutoPorId(this.idproduto)\n    .then(mensagem=>{\n      console.log(\"deletar sucesso\",this.idproduto, mensagem)\n      this.obterListaProduto();\n      this.closeModal();\n    })\n    .catch(mensagem=>{\n      console.log(\"deletar erro\",this.idproduto, mensagem)\n      this.closeModal();\n    })\n  }\n\n\n  mostrarModal(id){\n    this.idproduto = id\n    const elem = document.getElementById('modal1');\n    const instance = M.Modal.getInstance(elem);\n    instance.open();\n  }\n\n  closeModal(){\n\n    \n\n    const elem = document.getElementById('modal1');\n    const instance = M.Modal.getInstance(elem);\n    this.dtOptions.destroy= true;\n    instance.close();\n    \n      window.location.reload(); \n   \n    \n  }\n\n\n   GetCar() {\n \n      \n\n      window.location.reload();\n   \n}\n \n}\n","<a class=\"btn btn-rigth\" routerLink=\"/cadastro/\">Cadastrar novo produto</a>\r\n<div class=\"row\">\r\n  <div class=\" col s12\">\r\n<table datatable [dtOptions]=\"dtOptions\"  class=\"table row-border hover responsive-table\" id=\"example\" >   \r\n    <thead>\r\n        <tr>\r\n            <th>Id</th>\r\n            <th>Nome</th>\r\n            <th>Unidade Medida</th>\r\n            <th>Quantidade</th>\r\n            <th>Preço</th>\r\n            <th>Data Validade</th>\r\n            <th>Data Fabricação</th>\r\n            <td></td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody >\r\n        <tr *ngFor=\" let item of listaProduto;let i = index\"  >\r\n            <td>{{i+1}}</td>\r\n            <td>{{item.nome}}</td>\r\n            <td>{{item.unidadeMedida}}</td>\r\n            <td>{{item.quantidade}}</td>\r\n            <td>{{item.preco}}</td>\r\n            <td>{{item.DataValidade|date:\"dd/MM/yyyy\"}}</td>\r\n            <td>{{item.DataFabricacao|date:\"dd/MM/yyyy\"}}</td>\r\n            <td>\r\n              <button class=\"btn-margin-rigth red btn-small \" (click)=\"mostrarModal(i)\"><i class=\"material-icons \">delete</i></button>\r\n              <a class=\"btn-margin-rigth blue btn-small \" routerLink=\"/cadastro/{{i+1}}\"><i class=\"material-icons \">edit</i></a>\r\n            </td>    \r\n        </tr>\r\n        \r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n  \r\n\r\n  <!-- Modal Structure -->\r\n  <div id=\"modal1\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n       <h4>Atenção</h4>\r\n     <p>Deseja realmente apagar o produto?</p>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <a (click)=\"apagarProduto()\" class=\" blue btn-margin-rigth btn\">apagar</a>\r\n      <a (click)=\"closeModal()\" class=\"modal-close btn btn-margin-rigth\">Cancelar</a>\r\n    </div>\r\n  </div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  constructor() { }\n\n\n    cadastrarProduto(produto:string){\n        let listaProdutos = JSON.parse(localStorage.getItem(\"listaProduto\"))||[];\n        listaProdutos.push(JSON.parse(produto));\n        localStorage.setItem(\"listaProduto\", JSON.stringify(listaProdutos));\n    }\n\n    updateProduto(produto:string, id){\n        let listaProdutos = JSON.parse(localStorage.getItem(\"listaProduto\"))||[];\n        listaProdutos[id]= JSON.parse(produto);\n        localStorage.setItem(\"listaProduto\", JSON.stringify( listaProdutos));\n    }\n\n    obterProdutoPorId(id:number){\n        return new Promise((resolve,reject)=>{\n            let listaProdutos:Array<any> = JSON.parse(localStorage.getItem(\"listaProduto\"))||[];\n            if(listaProdutos.length > id )     \n                resolve(listaProdutos[id]);\n            reject([]);\n\n        })    \n    }\n\n    obterListaProduto(){\n        return new Promise((resolve,reject)=>{\n            let listaProdutos= [];\n             listaProdutos = JSON.parse(localStorage.getItem(\"listaProduto\"));\n                \n            resolve(listaProdutos);\n\n        })    \n    }\n\n    apagarProdutoPorId(id){\n        return new Promise((resolve, reject)=>{\n            if(id>=0){\n                let listaProdutos:Array<any> = JSON.parse(localStorage.getItem(\"listaProduto\"))||[];\n                listaProdutos.splice(id,1);\n                localStorage.setItem(\"listaProduto\", JSON.stringify( listaProdutos));\n                    resolve(\"Produto foi excluido com sucesso!\");\n            }\n            else\n                reject(\"Ocorreu um erro ao excluir produto\");\n        })\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}